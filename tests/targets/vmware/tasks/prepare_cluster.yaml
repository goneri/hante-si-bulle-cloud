---
- name: _community_ Create Cluster
  community.vmware.vmware_cluster:
    datacenter_name: "{{ my_dc_info.value.name }}"
    cluster_name: my_cluster
    validate_certs: no
  register: my_cluster_info

- name: Enable DRS
  community.vmware.vmware_cluster_drs:
    datacenter_name: "{{ my_dc_info.value.name }}"
    cluster_name: my_cluster
    enable: yes
  delegate_to: localhost
  when: my_cluster_info

- name: get all the clusters called my_cluster
  vmware.vmware_rest.vcenter_cluster_info:
    filter_names:
    - my_cluster
  register: my_cluster
  when: my_cluster_info

- name: a timer
  pause:
    seconds: 3
  when:
    - my_cluster_info
  register: fivesec

- name: Get all the resource pools
  vmware.vmware_rest.vcenter_resourcepool_info:
  register: resource_pools
  when:
    - my_cluster_info
    - fivesec

- name: Get details about a given resource_pool
  vmware.vmware_rest.vcenter_resourcepool_info:
    resource_pool: "{{ resource_pools.value[0].resource_pool }}"
  register: my_resource_pool
  when:
    - resource_pools

## - - name: Create an Ad hoc resource pool
## -   vmware.vmware_rest.vcenter_resourcepool:
## -     name: my_resource_pool
## -     parent: "{{ resource_pools.value[0].resource_pool }}"
## -     cpu_allocation:
## -       expandable_reservation: true
## -       limit: 40
## -       reservation: 0
## -       shares:
## -         level: "NORMAL"
## -     memory_allocation:
## -       expandable_reservation: false
## -       limit: 2000
## -       reservation: 0
## -       shares:
## -         level: "NORMAL"
## -   register: my_resource_pool
## - 
## - - name: _create an Ad hoc resource pool (idempotency)
## -   vmware.vmware_rest.vcenter_resourcepool:
## -     name: my_resource_pool
## -     parent: "{{ resource_pools.value[0].resource_pool }}"
## -     cpu_allocation:
## -       expandable_reservation: true
## -       limit: 40
## -       reservation: 0
## -       shares:
## -         level: "NORMAL"
## -     memory_allocation:
## -       expandable_reservation: false
## -       limit: 2000
## -       reservation: 0
## -       shares:
## -         level: "NORMAL"
## -   ignore_errors: true  # https://github.com/ansible-collections/vmware.vmware_rest/issues/157
## -   when: resource_pools
## - 
## - - name: Remove a resource pool
## -   vmware.vmware_rest.vcenter_resourcepool:
## -     resource_pool: "{{ my_resource_pool.id }}"
## -     state: absent
## - 
## - #- name: Modify a resource pool
## - #  vmware.vmware_rest.vcenter_resourcepool:
## - #    resource_pool: "{{ my_resource_pool.id }}"
## - #    cpu_allocation:
## - #      expandable_reservation: true
## - #      limit: -1
## - #      reservation: 0
## - #      shares:
## - #        level: "NORMAL"
## - #    memory_allocation:
## - #      expandable_reservation: false
## - #      limit: 1000
## - #      reservation: 0
## - #      shares:
## - #        level: "NORMAL"
## - #
## - #- name: Read details from a specific resource pool
## - #  vmware.vmware_rest.vcenter_resourcepool_info:
## - #    resource_pool: "{{ my_resource_pool.id }}"
## - #  register: my_resource_pool
## - #
## - #- ansible.builtin.debug: var=my_resource_pool
## - #- ansible.builtin.assert:
## - #    that:
## - #      - my_resource_pool.value.memory_allocation.limit == 1000
## - #
## - #- name: Get the existing resource pools
## - #  vmware.vmware_rest.vcenter_resourcepool_info:
## - #  register: resource_pools
